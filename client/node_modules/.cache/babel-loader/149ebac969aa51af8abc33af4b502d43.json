{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js\";\nimport './App.css';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji');\n\nconst selectedEmojis = [];\n\nfunction getTiles() {\n  var numEmojis = 69;\n  let numbers = [];\n\n  while (selectedEmojis.length + numbers.length < numEmojis) {\n    var r = Math.floor(Math.random() * (openmoji.openmojis.length - 1));\n    if (numbers.indexOf(r) === -1) numbers.push(r);\n  }\n\n  let emojis = [];\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis.push(openmoji.openmojis[numbers[index]]);\n  }\n\n  emojis = selectedEmojis.concat(emojis);\n  return /*#__PURE__*/_jsxDEV(TiledHexagons, {\n    tileSideLengths: 60,\n    tileGap: 4,\n    tileBorderRadii: 9,\n    maxHorizontal: 12,\n    tileTextStyles: {\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n    },\n    tiles: emojis.map(emoji => {\n      return {\n        img: `/images/${emoji.hexcode}.svg`,\n        onClick: () => clickEmoji(emoji)\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\nconst clickEmoji = emoji => {\n  console.log(emoji.hexcode + ' was clicked.');\n  selectedEmojis.push(emoji);\n};\n\nclass Example6 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colours: genColours()\n    };\n  }\n\n  render() {\n    let {\n      colours\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TiledHexagons, {\n      maxHorizontal: 5,\n      tileBorderRadii: 0,\n      tileGap: 0,\n      tileSideLengths: 60,\n      tiles: colours.map(colour => {\n        return {\n          fill: '#' + colour,\n          shadow: '#' + darken(colour, 25),\n          onClick: () => this.setState({\n            colours: genColours()\n          })\n        };\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: getTiles()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this); //\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js"],"names":["Hexagon","TiledHexagons","openmoji","require","selectedEmojis","getTiles","numEmojis","numbers","length","r","Math","floor","random","openmojis","indexOf","push","emojis","index","concat","fontFamily","fontSize","fill","map","emoji","img","hexcode","onClick","clickEmoji","console","log","Example6","Component","constructor","props","state","colours","genColours","render","colour","shadow","darken","setState","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons'\nconst openmoji = require('openmoji');\n\nconst selectedEmojis = [];\n\nfunction getTiles(){\n  var numEmojis = 69;\n\n  let numbers = [];\n  while(selectedEmojis.length + numbers.length < numEmojis){\n    var r = Math.floor(Math.random() * (openmoji.openmojis.length - 1));\n    if(numbers.indexOf(r) === -1) numbers.push(r);\n  }\n  let emojis = [];\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis.push(openmoji.openmojis[numbers[index]]);\n  }\n\n  emojis = selectedEmojis.concat(emojis); \n\n  return (\n    <TiledHexagons\n      tileSideLengths={60}\n      tileGap={4}\n      tileBorderRadii={9}\n      maxHorizontal={12}\n      tileTextStyles={{\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n      }}\n      tiles={emojis.map(emoji => {\n        return { \n          img: `/images/${emoji.hexcode}.svg`, \n          onClick: () => clickEmoji(emoji)\n        }\n      })}\n    />\n  );\n}\n\nconst clickEmoji = (emoji) => {\n  console.log(emoji.hexcode + ' was clicked.');\n  selectedEmojis.push(emoji);\n}\n\n\nclass Example6 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      colours: genColours()\n    }\n  }\n\n  render() {\n    let { colours } = this.state\n    return <TiledHexagons\n      maxHorizontal={5}\n      tileBorderRadii={0}\n      tileGap={0}\n      tileSideLengths={60}\n      tiles={colours. map(colour => {\n        return {\n          fill: '#'+colour,\n          shadow: '#'+darken(colour, 25),\n          onClick: () => this.setState({\n            colours: genColours()\n          })\n        }\n      })}\n    />\n  }\n}\nfunction App() {\n  return (    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        {getTiles()}\n      </header>\n    </div>\n  );\n    //\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}