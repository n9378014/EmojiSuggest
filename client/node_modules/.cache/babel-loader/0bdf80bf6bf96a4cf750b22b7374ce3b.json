{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js\";\nimport logo from \"./logo2.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji'); //requiring path and fs modules\n\n\nconst path = require('path');\n\nconst fs = require('fs'); //joining path of directory \n\n\nconst directoryPath = path.join(__dirname, 'Documents'); //passsing directoryPath and callback function\n\nfs.readdir(directoryPath, function (err, files) {\n  //handling error\n  if (err) {\n    return console.log('Unable to scan directory: ' + err);\n  } //listing all files using forEach\n\n\n  files.forEach(function (file) {\n    // Do whatever you want to do with the file\n    console.log(file);\n  });\n});\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n}\n\nconst om = openmoji.openmojis[0];\nconst images = importAll(require.context('./openmoji-svg-color', false, /\\.(png|jpe?g|svg)$/));\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: images['1F600.svg'],\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this), \" and save to reload. Bet this looks pretty cool huh? \", String(images.length)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js"],"names":["openmoji","require","path","fs","directoryPath","join","__dirname","readdir","err","files","console","log","forEach","file","importAll","r","images","keys","map","item","index","replace","om","openmojis","context","App","String","length"],"mappings":";;AACA,OAAO,WAAP;;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CAEA;;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB,C,CACA;;;AACA,MAAMG,aAAa,GAAGF,IAAI,CAACG,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAtB,C,CACA;;AACAH,EAAE,CAACI,OAAH,CAAWH,aAAX,EAA0B,UAAUI,GAAV,EAAeC,KAAf,EAAsB;AAC5C;AACA,MAAID,GAAJ,EAAS;AACL,WAAOE,OAAO,CAACC,GAAR,CAAY,+BAA+BH,GAA3C,CAAP;AACH,GAJ2C,CAK5C;;;AACAC,EAAAA,KAAK,CAACG,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,GAHD;AAIH,CAVD;;AAYA,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,MAAIC,MAAM,GAAG,EAAb;AACAD,EAAAA,CAAC,CAACE,IAAF,GAASC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAEJ,IAAAA,MAAM,CAACG,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCN,CAAC,CAACI,IAAD,CAAlC;AAA2C,GAA3E;AACA,SAAOH,MAAP;AACD;;AAED,MAAMM,EAAE,GAAGtB,QAAQ,CAACuB,SAAT,CAAmB,CAAnB,CAAX;AACA,MAAMP,MAAM,GAAGF,SAAS,CAACb,OAAO,CAACuB,OAAR,CAAgB,sBAAhB,EAAwC,KAAxC,EAA+C,oBAA/C,CAAD,CAAxB;;AAEA,SAASC,GAAT,GAAe;AAEb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAET,MAAM,CAAC,WAAD,CAAhB;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAoD,QAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP,2DAEmCU,MAAM,CAACV,MAAM,CAACW,MAAR,CAFzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KArBQF,G;AAuBT,eAAeA,GAAf","sourcesContent":["import logo from './logo2.svg';\nimport './App.css';\nconst openmoji = require('openmoji');\n\n//requiring path and fs modules\nconst path = require('path');\nconst fs = require('fs');\n//joining path of directory \nconst directoryPath = path.join(__dirname, 'Documents');\n//passsing directoryPath and callback function\nfs.readdir(directoryPath, function (err, files) {\n    //handling error\n    if (err) {\n        return console.log('Unable to scan directory: ' + err);\n    } \n    //listing all files using forEach\n    files.forEach(function (file) {\n        // Do whatever you want to do with the file\n        console.log(file); \n    });\n});\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n  return images;\n}\n\nconst om = openmoji.openmojis[0];\nconst images = importAll(require.context('./openmoji-svg-color', false, /\\.(png|jpe?g|svg)$/));\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={images['1F600.svg']} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n          Bet this looks pretty cool huh? {String(images.length)}\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}