{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js\";\nimport './App.css';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons';\n\nconst openmoji = require('openmoji');\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst selectedEmojis = new Array();\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Hello, world!\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction getTiles() {\n  var numEmojis = 69 - selectedEmojis.length;\n  const numbers = Array.from({\n    length: numEmojis\n  }, () => Math.floor(Math.random() * openmoji.openmojis.length));\n  let emojis = new Array(numEmojis);\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis[index] = openmoji.openmojis[numbers[index]];\n  }\n\n  emojis = selectedEmojis.concat(emojis);\n\n  const grid = /*#__PURE__*/_jsxDEV(TiledHexagons, {\n    tileSideLengths: 60,\n    tileGap: 4,\n    tileBorderRadii: 9,\n    maxHorizontal: 12,\n    tileTextStyles: {\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n    },\n    tiles: emojis.map(emoji => {\n      return {\n        img: `/images/${emoji.hexcode}.svg`,\n        onClick: () => clickEmoji(emoji)\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n\n  ReactDOM.render(grid, document.getElementById('root'));\n}\n\nconst clickEmoji = emoji => {\n  console.log(emoji.hexcode + ' was clicked.');\n  selectedEmojis.push(emoji);\n  App();\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), getTiles()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this); //\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js"],"names":["Hexagon","TiledHexagons","openmoji","require","React","selectedEmojis","Array","ReactDOM","render","document","getElementById","getTiles","numEmojis","length","numbers","from","Math","floor","random","openmojis","emojis","index","concat","grid","fontFamily","fontSize","fill","map","emoji","img","hexcode","onClick","clickEmoji","console","log","push","App"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,gBAAvC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,IAAIC,KAAJ,EAAvB;AACAC,QAAQ,CAACC,MAAT,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;;AAIA,SAASC,QAAT,GAAmB;AACjB,MAAIC,SAAS,GAAG,KAAKP,cAAc,CAACQ,MAApC;AAEA,QAAMC,OAAO,GAAGR,KAAK,CAACS,IAAN,CAAW;AAACF,IAAAA,MAAM,EAAED;AAAT,GAAX,EAAgC,MAAMI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,QAAQ,CAACiB,SAAT,CAAmBN,MAA9C,CAAtC,CAAhB;AACA,MAAIO,MAAM,GAAG,IAAId,KAAJ,CAAUM,SAAV,CAAb;;AAEA,OAAK,IAAIS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,OAAO,CAACD,MAApC,EAA4CQ,KAAK,EAAjD,EAAqD;AACnDD,IAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBnB,QAAQ,CAACiB,SAAT,CAAmBL,OAAO,CAACO,KAAD,CAA1B,CAAhB;AACD;;AAEDD,EAAAA,MAAM,GAAGf,cAAc,CAACiB,MAAf,CAAsBF,MAAtB,CAAT;;AAEA,QAAMG,IAAI,gBACR,QAAC,aAAD;AACI,IAAA,eAAe,EAAE,EADrB;AAEI,IAAA,OAAO,EAAE,CAFb;AAGI,IAAA,eAAe,EAAE,CAHrB;AAII,IAAA,aAAa,EAAE,EAJnB;AAKI,IAAA,cAAc,EAAE;AAChBC,MAAAA,UAAU,EAAE,iBADI;AAEhBC,MAAAA,QAAQ,EAAE,MAFM;AAGhBC,MAAAA,IAAI,EAAE;AAHU,KALpB;AAUI,IAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAWC,KAAK,IAAI;AACzB,aAAO;AACLC,QAAAA,GAAG,EAAG,WAAUD,KAAK,CAACE,OAAQ,MADzB;AAELC,QAAAA,OAAO,EAAE,MAAMC,UAAU,CAACJ,KAAD;AAFpB,OAAP;AAID,KALM;AAVX;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBArB,EAAAA,QAAQ,CAACC,MAAT,CAAgBe,IAAhB,EAAsBd,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAtB;AACD;;AAED,MAAMsB,UAAU,GAAIJ,KAAD,IAAW;AAC5BK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACE,OAAN,GAAgB,eAA5B;AACAzB,EAAAA,cAAc,CAAC8B,IAAf,CAAoBP,KAApB;AACAQ,EAAAA,GAAG;AACJ,CAJD;;AAMA,SAASA,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGzB,QAAQ,EALX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADa,CAUX;AACH;;KAXQyB,G;AAaT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons'\nconst openmoji = require('openmoji');\nimport React from 'react';\n\nconst selectedEmojis = new Array();\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('root')\n);\nfunction getTiles(){\n  var numEmojis = 69 - selectedEmojis.length;\n\n  const numbers = Array.from({length: numEmojis}, () => Math.floor(Math.random() * openmoji.openmojis.length));\n  let emojis = new Array(numEmojis);\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis[index] = openmoji.openmojis[numbers[index]];\n  }\n\n  emojis = selectedEmojis.concat(emojis); \n\n  const grid = (\n    <TiledHexagons\n        tileSideLengths={60}\n        tileGap={4}\n        tileBorderRadii={9}\n        maxHorizontal={12}\n        tileTextStyles={{\n        fontFamily: 'Source Sans Pro',\n        fontSize: '68px',\n        fill: '#7cebff'\n        }}\n        tiles={emojis.map(emoji => {\n          return { \n            img: `/images/${emoji.hexcode}.svg`, \n            onClick: () => clickEmoji(emoji)\n          }\n        })}\n    />\n  )\n  ReactDOM.render(grid, document.getElementById('root'));\n}\n\nconst clickEmoji = (emoji) => {\n  console.log(emoji.hexcode + ' was clicked.');\n  selectedEmojis.push(emoji);\n  App();\n}\n\nfunction App() {\n  return (    \n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div id=\"root\">\n      </div>\n      {getTiles()}\n    </div>\n  );\n    //\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}