{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js\";\nimport './App.css';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji');\n\nconst selectedEmojis = new Array();\n\nfunction getTiles() {\n  var numEmojis = 69 - selectedEmojis.length;\n  const numbers = Array.from({\n    length: numEmojis\n  }, () => Math.floor(Math.random() * openmoji.openmojis.length));\n  let emojis = new Array(numEmojis);\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis[index] = openmoji.openmojis[numbers[index]];\n  }\n\n  emojis = selectedEmojis.concat(emojis);\n  return /*#__PURE__*/_jsxDEV(TiledHexagons, {\n    tileSideLengths: 60,\n    tileGap: 4,\n    tileBorderRadii: 9,\n    maxHorizontal: 12,\n    tileTextStyles: {\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n    },\n    tiles: emojis.map(emoji => {\n      return {\n        img: `/images/${emoji.hexcode}.svg`,\n        onClick: () => clickEmoji(emoji)\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\nconst clickEmoji = emoji => {\n  console.log(emoji.hexcode + ' was clicked.');\n  selectedEmojis.push(emoji);\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: getTiles()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this); //\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js"],"names":["Hexagon","TiledHexagons","openmoji","require","selectedEmojis","Array","getTiles","numEmojis","length","numbers","from","Math","floor","random","openmojis","emojis","index","concat","fontFamily","fontSize","fill","map","emoji","img","hexcode","onClick","clickEmoji","console","log","push","App"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,gBAAvC;;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,cAAc,GAAG,IAAIC,KAAJ,EAAvB;;AAEA,SAASC,QAAT,GAAmB;AACjB,MAAIC,SAAS,GAAG,KAAKH,cAAc,CAACI,MAApC;AAEA,QAAMC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAW;AAACF,IAAAA,MAAM,EAAED;AAAT,GAAX,EAAgC,MAAMI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,QAAQ,CAACY,SAAT,CAAmBN,MAA9C,CAAtC,CAAhB;AACA,MAAIO,MAAM,GAAG,IAAIV,KAAJ,CAAUE,SAAV,CAAb;;AAEA,OAAK,IAAIS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,OAAO,CAACD,MAApC,EAA4CQ,KAAK,EAAjD,EAAqD;AACnDD,IAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBd,QAAQ,CAACY,SAAT,CAAmBL,OAAO,CAACO,KAAD,CAA1B,CAAhB;AACD;;AAEDD,EAAAA,MAAM,GAAGX,cAAc,CAACa,MAAf,CAAsBF,MAAtB,CAAT;AAEA,sBACE,QAAC,aAAD;AACE,IAAA,eAAe,EAAE,EADnB;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,eAAe,EAAE,CAHnB;AAIE,IAAA,aAAa,EAAE,EAJjB;AAKE,IAAA,cAAc,EAAE;AAChBG,MAAAA,UAAU,EAAE,iBADI;AAEhBC,MAAAA,QAAQ,EAAE,MAFM;AAGhBC,MAAAA,IAAI,EAAE;AAHU,KALlB;AAUE,IAAA,KAAK,EAAEL,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAI;AACzB,aAAO;AACLC,QAAAA,GAAG,EAAG,WAAUD,KAAK,CAACE,OAAQ,MADzB;AAELC,QAAAA,OAAO,EAAE,MAAMC,UAAU,CAACJ,KAAD;AAFpB,OAAP;AAID,KALM;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;AAED,MAAMI,UAAU,GAAIJ,KAAD,IAAW;AAC5BK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACE,OAAN,GAAgB,eAA5B;AACApB,EAAAA,cAAc,CAACyB,IAAf,CAAoBP,KAApB;AACD,CAHD;;AAKA,SAASQ,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,gBACGxB,QAAQ;AADX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CADa,CAQX;AACH;;KATQwB,G;AAWT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons'\nconst openmoji = require('openmoji');\n\nconst selectedEmojis = new Array();\n\nfunction getTiles(){\n  var numEmojis = 69 - selectedEmojis.length;\n\n  const numbers = Array.from({length: numEmojis}, () => Math.floor(Math.random() * openmoji.openmojis.length));\n  let emojis = new Array(numEmojis);\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis[index] = openmoji.openmojis[numbers[index]];\n  }\n\n  emojis = selectedEmojis.concat(emojis); \n\n  return (\n    <TiledHexagons\n      tileSideLengths={60}\n      tileGap={4}\n      tileBorderRadii={9}\n      maxHorizontal={12}\n      tileTextStyles={{\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n      }}\n      tiles={emojis.map(emoji => {\n        return { \n          img: `/images/${emoji.hexcode}.svg`, \n          onClick: () => clickEmoji(emoji)\n        }\n      })}\n    />\n  );\n}\n\nconst clickEmoji = (emoji) => {\n  console.log(emoji.hexcode + ' was clicked.');\n  selectedEmojis.push(emoji);\n}\n\nfunction App() {\n  return (    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        {getTiles()}\n      </header>\n    </div>\n  );\n    //\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}