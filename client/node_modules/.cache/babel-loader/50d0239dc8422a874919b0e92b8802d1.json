{"ast":null,"code":"import { Hexagon, TiledHexagons } from 'tiled-hexagons';\nimport { defineGrid } from 'honeycomb-grid';\nimport { useState } from 'react';\nimport React from 'react';\nimport * as Honeycomb from \"honeycomb-grid\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji');\n\nconst Hexgrid2 = () => {\n  const draw = SVG(document.body);\n  const Hex = Honeycomb.extendHex({\n    size: 20,\n\n    // orientation: 'flat',\t// default: 'pointy'\n    // offset: 1,\t\t\t\t\t\t// default: -1\n    render(draw) {\n      const position = this.toPoint();\n      const centerPosition = this.center().add(position);\n      this.draw = draw; // draw the hex\n\n      this.draw.polygon(this.corners().map(({\n        x,\n        y\n      }) => `${x},${y}`)).fill('none').stroke({\n        width: 1,\n        color: '#999'\n      }).translate(position.x, position.y);\n      const fontSize = 12; // draw x and y coordinates\n\n      this.draw.text(`${this.x},${this.y}`).font({\n        size: fontSize,\n        anchor: 'middle',\n        leading: 1.4,\n        fill: '#69c'\n      }).translate(centerPosition.x, centerPosition.y - fontSize);\n    }\n\n  });\n  const Grid = Honeycomb.defineGrid(Hex);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Hexgrid2;\nexport default Hexgrid2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hexgrid2\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/Hexgrid2.js"],"names":["Hexagon","TiledHexagons","defineGrid","useState","React","Honeycomb","openmoji","require","Hexgrid2","draw","SVG","document","body","Hex","extendHex","size","render","position","toPoint","centerPosition","center","add","polygon","corners","map","x","y","fill","stroke","width","color","translate","fontSize","text","font","anchor","leading","Grid"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,gBAAvC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;;;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,IAAI,GAAGC,GAAG,CAACC,QAAQ,CAACC,IAAV,CAAhB;AACA,QAAMC,GAAG,GAAGR,SAAS,CAACS,SAAV,CAAoB;AAC9BC,IAAAA,IAAI,EAAE,EADwB;;AAE9B;AACA;AAEAC,IAAAA,MAAM,CAACP,IAAD,EAAO;AACX,YAAMQ,QAAQ,GAAG,KAAKC,OAAL,EAAjB;AACA,YAAMC,cAAc,GAAG,KAAKC,MAAL,GAAcC,GAAd,CAAkBJ,QAAlB,CAAvB;AAEA,WAAKR,IAAL,GAAYA,IAAZ,CAJW,CAMP;;AACJ,WAAKA,IAAL,CACGa,OADH,CACW,KAAKC,OAAL,GAAeC,GAAf,CAAmB,CAAC;AAAEC,QAAAA,CAAF;AAAKC,QAAAA;AAAL,OAAD,KAAe,GAAED,CAAE,IAAGC,CAAE,EAA3C,CADX,EAEGC,IAFH,CAEQ,MAFR,EAGGC,MAHH,CAGU;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAE;AAAnB,OAHV,EAIGC,SAJH,CAIad,QAAQ,CAACQ,CAJtB,EAIyBR,QAAQ,CAACS,CAJlC;AAMA,YAAMM,QAAQ,GAAG,EAAjB,CAbW,CAeP;;AACJ,WAAKvB,IAAL,CACGwB,IADH,CACS,GAAE,KAAKR,CAAE,IAAG,KAAKC,CAAE,EAD5B,EAEGQ,IAFH,CAEQ;AACJnB,QAAAA,IAAI,EAAEiB,QADF;AAEJG,QAAAA,MAAM,EAAE,QAFJ;AAGJC,QAAAA,OAAO,EAAE,GAHL;AAIJT,QAAAA,IAAI,EAAE;AAJF,OAFR,EAQGI,SARH,CAQaZ,cAAc,CAACM,CAR5B,EAQ+BN,cAAc,CAACO,CAAf,GAAmBM,QARlD;AASD;;AA9B6B,GAApB,CAAZ;AAgCA,QAAMK,IAAI,GAAGhC,SAAS,CAACH,UAAV,CAAqBW,GAArB,CAAb;AAGA,sBACI,qCADJ;AAKH,CA1CD;;KAAML,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import { Hexagon, TiledHexagons } from 'tiled-hexagons'\nimport { defineGrid } from 'honeycomb-grid'\nimport { useState } from 'react'\nimport React from 'react';\nimport * as Honeycomb from \"honeycomb-grid\";\n\nconst openmoji = require('openmoji');\n\n\n\nconst Hexgrid2 = () => {\n    const draw = SVG(document.body)\n    const Hex = Honeycomb.extendHex({\n      size: 20,\n      // orientation: 'flat',\t// default: 'pointy'\n      // offset: 1,\t\t\t\t\t\t// default: -1\n    \n      render(draw) {\n        const position = this.toPoint()\n        const centerPosition = this.center().add(position)\n    \n        this.draw = draw\n    \n            // draw the hex\n        this.draw\n          .polygon(this.corners().map(({ x, y }) => `${x},${y}`))\n          .fill('none')\n          .stroke({ width: 1, color: '#999' })\n          .translate(position.x, position.y)\n    \n        const fontSize = 12\n    \n            // draw x and y coordinates\n        this.draw\n          .text(`${this.x},${this.y}`)\n          .font({\n            size: fontSize,\n            anchor: 'middle',\n            leading: 1.4,\n            fill: '#69c'\n          })\n          .translate(centerPosition.x, centerPosition.y - fontSize)\n      }\n    })\n    const Grid = Honeycomb.defineGrid(Hex)\n    \n    \n    return ( \n        <>\n            \n    </>\n    );\n}\n \nexport default Hexgrid2;"]},"metadata":{},"sourceType":"module"}