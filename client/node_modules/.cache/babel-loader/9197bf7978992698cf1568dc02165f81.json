{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js\";\nimport logo from \"./logo2.svg\";\nimport './App.css';\nimport HexagonGrid from 'react-hexagon-grid';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji');\n\nconst om = openmoji.openmojis[99];\nvar len = 504; //openmoji.openmojis.length;\n\nconst hexagons = Array.from(Array(len).keys());\nvar image = \"/images/\" + String(om.hexcode) + \".svg\";\nconsole.log(image);\nconst gridWidth = window.screen.width + 50;\nconst gridHeight = window.screen.height + 50; //        <img src={image} className=\"App-logo\" alt=\"logo\" />\n//<a\n//className=\"App-link\"\n//href=\"https://reactjs.org\"\n//target=\"_blank\"\n//rel=\"noopener noreferrer\"\n//>\n//Learn React\n//</a>\n\nfunction refreshTiles() {\n  var numTiles = openmoji.openmojis.length;\n  var tiles = Array.from(Array(numTiles).keys());\n\n  for (let index = 0; index < tiles.length; index++) {\n    const element = tiles[index];\n  }\n\n  return /*#__PURE__*/_jsxDEV(TiledHexagons, {\n    tileSideLengths: 60,\n    tileGap: 4,\n    tileBorderRadii: 9,\n    maxHorizontal: 3,\n    tileTextStyles: {\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n    },\n    tiles: [{\n      text: 'あ',\n      textStyle: {\n        fontFamily: 'M1Plus'\n      }\n    }, {\n      img: logo,\n      //replace with specific emoji images\n      onClick: () => console.log('clicked!'),\n      //Make a proper function, pass the value to it\n      fill: '#7cebff',\n      //get this right\n      shadow: '#64c5d6' //this too\n\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\nconst changeStyle = hexagon => {\n  var hex = document.getElementsByTagName('polygon');\n  hex[hexagon].style.fill = \"red\";\n};\n\nconst getHexProps = hexagon => {\n  var num = hexagon;\n  const emoji = openmoji.openmojis[hexagon];\n  var emojiimg = \"/images/\" + String(emoji.hexcode) + \".svg\";\n  return {\n    style: {\n      fill: \"white\",\n      backgroundImage: {\n        emojiimg\n      },\n      stroke: '#282c34' //'#007aff'\n\n    },\n    onClick: num => changeStyle(hexagon)\n  };\n};\n\nconst renderHexagonContent = hexagon => {\n  const emoji = openmoji.openmojis[hexagon];\n  var emojiimg = \"/images/\" + String(emoji.hexcode) + \".svg\";\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    src: logo,\n    width: \"100\",\n    height: \"200\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this); //refreshTiles());\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js"],"names":["HexagonGrid","Hexagon","TiledHexagons","openmoji","require","om","openmojis","len","hexagons","Array","from","keys","image","String","hexcode","console","log","gridWidth","window","screen","width","gridHeight","height","refreshTiles","numTiles","length","tiles","index","element","fontFamily","fontSize","fill","text","textStyle","img","logo","onClick","shadow","changeStyle","hexagon","hex","document","getElementsByTagName","style","getHexProps","num","emoji","emojiimg","backgroundImage","stroke","renderHexagonContent","App"],"mappings":"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","sourcesContent":["import logo from './logo2.svg';\nimport './App.css';\nimport HexagonGrid from 'react-hexagon-grid';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons'\nconst openmoji = require('openmoji');\n\nconst om = openmoji.openmojis[99];\nvar len = 504//openmoji.openmojis.length;\nconst hexagons = Array.from(Array(len).keys())\nvar image = \"/images/\" + String(om.hexcode) + \".svg\";\nconsole.log(image);\n\nconst gridWidth = window.screen.width + 50;\nconst gridHeight = window.screen.height + 50;\n\n//        <img src={image} className=\"App-logo\" alt=\"logo\" />\n//<a\n//className=\"App-link\"\n//href=\"https://reactjs.org\"\n//target=\"_blank\"\n//rel=\"noopener noreferrer\"\n//>\n//Learn React\n//</a>\n\nfunction refreshTiles(){\n  var numTiles = openmoji.openmojis.length;\n  var tiles = Array.from(Array(numTiles).keys())\n\n  for (let index = 0; index < tiles.length; index++) {\n    const element = tiles[index];\n  }\n\n  return (\n    <TiledHexagons\n      tileSideLengths={60}\n      tileGap={4}\n      tileBorderRadii={9}\n      maxHorizontal={3}\n      tileTextStyles={{\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n      }}\n      tiles={[\n      { text: 'あ',\n        textStyle: {\n          fontFamily: 'M1Plus'\n        }\n      },\n      { img: logo, //replace with specific emoji images\n        onClick: () => console.log('clicked!'), //Make a proper function, pass the value to it\n        fill: '#7cebff', //get this right\n        shadow: '#64c5d6' //this too\n      },\n      ]}\n    />\n  );\n}\n\nconst changeStyle = (hexagon) => {\n  var hex = document.getElementsByTagName('polygon');\n  hex[hexagon].style.fill = \"red\";\n}\n\nconst getHexProps = (hexagon) => {\n  var num = hexagon;\n  const emoji = openmoji.openmojis[hexagon];\n  var emojiimg = \"/images/\" + String(emoji.hexcode) + \".svg\";\n\n  return {\n    style: {\n      fill: \"white\",\n      backgroundImage: {emojiimg},\n      stroke: '#282c34' //'#007aff'\n    },\n    onClick: (num) => changeStyle(hexagon)\n  };\n}\nconst renderHexagonContent = (hexagon) => {\n  const emoji = openmoji.openmojis[hexagon];\n  var emojiimg = \"/images/\" + String(emoji.hexcode) + \".svg\";\n\n  return (\n    <iframe src={logo} width=\"100\" height=\"200\"/>\n  );\n} \n\nfunction App() {\n  return (    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n      </header>\n    </div>\n  );\n    //refreshTiles());\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}