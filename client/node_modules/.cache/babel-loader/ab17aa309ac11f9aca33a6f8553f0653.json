{"ast":null,"code":"/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Grace/Documents/GitHub/EmojiSuggest/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar toString = Object.prototype.toString;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\nvar getSymbols = Object.getOwnPropertySymbols;\n\nmodule.exports = function (target) {\n  if (!isObject(target)) {\n    throw new TypeError('expected the first argument to be an object');\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (args.length === 0 || typeof Symbol !== 'function' || typeof getSymbols !== 'function') {\n    return target;\n  }\n\n  for (var _i = 0, _args = args; _i < _args.length; _i++) {\n    var arg = _args[_i];\n    var names = getSymbols(arg);\n\n    var _iterator = _createForOfIteratorHelper(names),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var key = _step.value;\n\n        if (isEnumerable.call(arg, key)) {\n          target[key] = arg[key];\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return target;\n};\n\nfunction isObject(val) {\n  return typeof val === 'function' || toString.call(val) === '[object Object]' || Array.isArray(val);\n}","map":{"version":3,"sources":["C:/Users/Grace/Documents/GitHub/EmojiSuggest/client/node_modules/assign-deep/node_modules/assign-symbols/index.js"],"names":["toString","Object","prototype","isEnumerable","propertyIsEnumerable","getSymbols","getOwnPropertySymbols","module","exports","target","isObject","TypeError","args","length","Symbol","arg","names","key","call","val","Array","isArray"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,IAAMA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAlC;AACA,IAAMG,YAAY,GAAGF,MAAM,CAACC,SAAP,CAAiBE,oBAAtC;AACA,IAAMC,UAAU,GAAGJ,MAAM,CAACK,qBAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAAqB;AACpC,MAAI,CAACC,QAAQ,CAACD,MAAD,CAAb,EAAuB;AACrB,UAAM,IAAIE,SAAJ,CAAc,6CAAd,CAAN;AACD;;AAHmC,oCAATC,IAAS;AAATA,IAAAA,IAAS;AAAA;;AAKpC,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAAhB,IAAqB,OAAOC,MAAP,KAAkB,UAAvC,IAAqD,OAAOT,UAAP,KAAsB,UAA/E,EAA2F;AACzF,WAAOI,MAAP;AACD;;AAED,2BAAgBG,IAAhB,2BAAsB;AAAjB,QAAIG,GAAG,YAAP;AACH,QAAIC,KAAK,GAAGX,UAAU,CAACU,GAAD,CAAtB;;AADoB,+CAGJC,KAHI;AAAA;;AAAA;AAGpB,0DAAuB;AAAA,YAAdC,GAAc;;AACrB,YAAId,YAAY,CAACe,IAAb,CAAkBH,GAAlB,EAAuBE,GAAvB,CAAJ,EAAiC;AAC/BR,UAAAA,MAAM,CAACQ,GAAD,CAAN,GAAcF,GAAG,CAACE,GAAD,CAAjB;AACD;AACF;AAPmB;AAAA;AAAA;AAAA;AAAA;AAQrB;;AACD,SAAOR,MAAP;AACD,CAnBD;;AAqBA,SAASC,QAAT,CAAkBS,GAAlB,EAAuB;AACrB,SAAO,OAAOA,GAAP,KAAe,UAAf,IAA6BnB,QAAQ,CAACkB,IAAT,CAAcC,GAAd,MAAuB,iBAApD,IAAyEC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAhF;AACD","sourcesContent":["/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst toString = Object.prototype.toString;\nconst isEnumerable = Object.prototype.propertyIsEnumerable;\nconst getSymbols = Object.getOwnPropertySymbols;\n\nmodule.exports = (target, ...args) => {\n  if (!isObject(target)) {\n    throw new TypeError('expected the first argument to be an object');\n  }\n\n  if (args.length === 0 || typeof Symbol !== 'function' || typeof getSymbols !== 'function') {\n    return target;\n  }\n\n  for (let arg of args) {\n    let names = getSymbols(arg);\n\n    for (let key of names) {\n      if (isEnumerable.call(arg, key)) {\n        target[key] = arg[key];\n      }\n    }\n  }\n  return target;\n};\n\nfunction isObject(val) {\n  return typeof val === 'function' || toString.call(val) === '[object Object]' || Array.isArray(val);\n}\n"]},"metadata":{},"sourceType":"script"}