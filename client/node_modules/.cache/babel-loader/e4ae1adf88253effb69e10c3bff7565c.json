{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/Hexgrid.js\";\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji');\n\nconst Hexgrid = () => {\n  const handleClick = (emoji, e) => {\n    console.log(emoji.hexcode + ' was clicked.');\n    e.fill = \"red\"; //selectedEmojis.push(emoji);\n  };\n\n  const selectedEmojis = [];\n  var numEmojis = 69; //69\n\n  let numbers = [];\n\n  while (selectedEmojis.length + numbers.length < numEmojis) {\n    var r = Math.floor(Math.random() * (openmoji.openmojis.length - 1));\n    if (numbers.indexOf(r) === -1) numbers.push(r);\n  }\n\n  let emojis = [];\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis.push(openmoji.openmojis[numbers[index]]);\n  }\n\n  emojis = selectedEmojis.concat(emojis);\n  return /*#__PURE__*/_jsxDEV(TiledHexagons, {\n    tileSideLengths: 60,\n    tileGap: 4,\n    tileBorderRadii: 9,\n    maxHorizontal: 12,\n    tileTextStyles: {\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n    },\n    tiles: emojis.map(emoji => {\n      return {\n        img: `/images/${emoji.hexcode}.svg`,\n        onClick: e => handleClick(emoji, e)\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Hexgrid;\nexport default Hexgrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hexgrid\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/Hexgrid.js"],"names":["Hexagon","TiledHexagons","openmoji","require","Hexgrid","handleClick","emoji","e","console","log","hexcode","fill","selectedEmojis","numEmojis","numbers","length","r","Math","floor","random","openmojis","indexOf","push","emojis","index","concat","fontFamily","fontSize","map","img","onClick"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,gBAAvC;;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAN,GAAgB,eAA5B;AACAH,IAAAA,CAAC,CAACI,IAAF,GAAS,KAAT,CAF8B,CAG9B;AAEH,GALD;;AAOA,QAAMC,cAAc,GAAG,EAAvB;AACA,MAAIC,SAAS,GAAG,EAAhB,CATkB,CASE;;AAEpB,MAAIC,OAAO,GAAG,EAAd;;AACA,SAAMF,cAAc,CAACG,MAAf,GAAwBD,OAAO,CAACC,MAAhC,GAAyCF,SAA/C,EAAyD;AACrD,QAAIG,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBjB,QAAQ,CAACkB,SAAT,CAAmBL,MAAnB,GAA4B,CAA7C,CAAX,CAAR;AACA,QAAGD,OAAO,CAACO,OAAR,CAAgBL,CAAhB,MAAuB,CAAC,CAA3B,EAA8BF,OAAO,CAACQ,IAAR,CAAaN,CAAb;AACjC;;AACD,MAAIO,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGV,OAAO,CAACC,MAApC,EAA4CS,KAAK,EAAjD,EAAqD;AACjDD,IAAAA,MAAM,CAACD,IAAP,CAAYpB,QAAQ,CAACkB,SAAT,CAAmBN,OAAO,CAACU,KAAD,CAA1B,CAAZ;AACH;;AAEDD,EAAAA,MAAM,GAAGX,cAAc,CAACa,MAAf,CAAsBF,MAAtB,CAAT;AAEA,sBACI,QAAC,aAAD;AACF,IAAA,eAAe,EAAE,EADf;AAEF,IAAA,OAAO,EAAE,CAFP;AAGF,IAAA,eAAe,EAAE,CAHf;AAIF,IAAA,aAAa,EAAE,EAJb;AAKF,IAAA,cAAc,EAAE;AAChBG,MAAAA,UAAU,EAAE,iBADI;AAEhBC,MAAAA,QAAQ,EAAE,MAFM;AAGhBhB,MAAAA,IAAI,EAAE;AAHU,KALd;AAUF,IAAA,KAAK,EAAEY,MAAM,CAACK,GAAP,CAAWtB,KAAK,IAAI;AACzB,aAAO;AACLuB,QAAAA,GAAG,EAAG,WAAUvB,KAAK,CAACI,OAAQ,MADzB;AAELoB,QAAAA,OAAO,EAAGvB,CAAD,IAAOF,WAAW,CAACC,KAAD,EAAQC,CAAR;AAFtB,OAAP;AAID,KALM;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA3CD;;KAAMH,O;AA6CN,eAAeA,OAAf","sourcesContent":["import { Hexagon, TiledHexagons } from 'tiled-hexagons'\nconst openmoji = require('openmoji');\n\nconst Hexgrid = () => {\n    const handleClick = (emoji, e) => {\n        console.log(emoji.hexcode + ' was clicked.');\n        e.fill = \"red\";\n        //selectedEmojis.push(emoji);\n\n    }\n    \n    const selectedEmojis = [];\n    var numEmojis = 69; //69\n\n    let numbers = [];\n    while(selectedEmojis.length + numbers.length < numEmojis){\n        var r = Math.floor(Math.random() * (openmoji.openmojis.length - 1));\n        if(numbers.indexOf(r) === -1) numbers.push(r);\n    }\n    let emojis = [];\n\n    for (let index = 0; index < numbers.length; index++) {\n        emojis.push(openmoji.openmojis[numbers[index]]);\n    }\n\n    emojis = selectedEmojis.concat(emojis); \n\n    return (  \n        <TiledHexagons\n      tileSideLengths={60}\n      tileGap={4}\n      tileBorderRadii={9}\n      maxHorizontal={12}\n      tileTextStyles={{\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n      }}\n      tiles={emojis.map(emoji => {\n        return { \n          img: `/images/${emoji.hexcode}.svg`, \n          onClick: (e) => handleClick(emoji, e)\n        }\n      })}\n    />\n    );\n}\n \nexport default Hexgrid;"]},"metadata":{},"sourceType":"module"}