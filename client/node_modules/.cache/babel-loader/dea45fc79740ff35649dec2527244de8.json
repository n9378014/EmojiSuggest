{"ast":null,"code":"var _jsxFileName = \"/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js\";\nimport './App.css';\nimport HexagonGrid from 'react-hexagon-grid';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst openmoji = require('openmoji');\n\nconst om = openmoji.openmojis[99];\nvar len = 504; //openmoji.openmojis.length;\n\nconst hexagons = Array.from(Array(len).keys());\nvar image = \"/images/\" + String(om.hexcode) + \".svg\";\nconsole.log(image);\nconst gridWidth = window.screen.width + 50;\nconst gridHeight = window.screen.height + 50; //        <img src={image} className=\"App-logo\" alt=\"logo\" />\n//<a\n//className=\"App-link\"\n//href=\"https://reactjs.org\"\n//target=\"_blank\"\n//rel=\"noopener noreferrer\"\n//>\n//Learn React\n//</a>\n\nfunction getTiles() {\n  //var numTiles = openmoji.openmojis.length;\n  var numEmojis = 69;\n  const numbers = Array.from({\n    length: numEmojis\n  }, () => Math.floor(Math.random() * openmoji.openmojis.length));\n  let emojis = new Array(numEmojis);\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis[index] = openmoji.openmojis[numbers[index]];\n  }\n\n  return /*#__PURE__*/_jsxDEV(TiledHexagons, {\n    tileSideLengths: 60,\n    tileGap: 4,\n    tileBorderRadii: 9,\n    maxHorizontal: 12,\n    tileTextStyles: {\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n    },\n    tiles: emojis.map(emoji => {\n      return {\n        img: `/images/${emoji.hexcode}.svg`,\n        onClick: () => clickEmoji(emoji),\n        fill: \"red\"\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n} //img: logo, //replace with specific emoji images\n// onClick: () => console.log('clicked!'), //Make a proper function, pass the value to it\n//fill: '#7cebff', //get this right\n// shadow: '#64c5d6' //this too\n\n\nconst clickEmoji = (me, emoji) => {\n  console.log(emoji.hexcode + ' was clicked.');\n};\n\nconst getHexProps = hexagon => {\n  var num = hexagon;\n  const emoji = openmoji.openmojis[hexagon];\n  var emojiimg = \"/images/\" + String(emoji.hexcode) + \".svg\";\n  return {\n    style: {\n      fill: \"white\",\n      backgroundImage: {\n        emojiimg\n      },\n      stroke: '#282c34' //'#007aff'\n\n    }\n  };\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: getTiles()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this); //\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/graceheffernan/Desktop/EGH400-1/emojisuggest/client/src/App.js"],"names":["HexagonGrid","Hexagon","TiledHexagons","openmoji","require","om","openmojis","len","hexagons","Array","from","keys","image","String","hexcode","console","log","gridWidth","window","screen","width","gridHeight","height","getTiles","numEmojis","numbers","length","Math","floor","random","emojis","index","fontFamily","fontSize","fill","map","emoji","img","onClick","clickEmoji","me","getHexProps","hexagon","num","emojiimg","style","backgroundImage","stroke","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport HexagonGrid from 'react-hexagon-grid';\nimport { Hexagon, TiledHexagons } from 'tiled-hexagons'\nconst openmoji = require('openmoji');\n\nconst om = openmoji.openmojis[99];\nvar len = 504//openmoji.openmojis.length;\nconst hexagons = Array.from(Array(len).keys())\nvar image = \"/images/\" + String(om.hexcode) + \".svg\";\nconsole.log(image);\n\nconst gridWidth = window.screen.width + 50;\nconst gridHeight = window.screen.height + 50;\n\n//        <img src={image} className=\"App-logo\" alt=\"logo\" />\n//<a\n//className=\"App-link\"\n//href=\"https://reactjs.org\"\n//target=\"_blank\"\n//rel=\"noopener noreferrer\"\n//>\n//Learn React\n//</a>\n\nfunction getTiles(){\n  //var numTiles = openmoji.openmojis.length;\n\n  var numEmojis = 69;\n\n  const numbers = Array.from({length: numEmojis}, () => Math.floor(Math.random() * openmoji.openmojis.length));\n  let emojis = new Array(numEmojis);\n\n  for (let index = 0; index < numbers.length; index++) {\n    emojis[index] = openmoji.openmojis[numbers[index]];\n  }\n\n  return (\n    <TiledHexagons\n      tileSideLengths={60}\n      tileGap={4}\n      tileBorderRadii={9}\n      maxHorizontal={12}\n      tileTextStyles={{\n      fontFamily: 'Source Sans Pro',\n      fontSize: '68px',\n      fill: '#7cebff'\n      }}\n      tiles={emojis.map(emoji => {\n        return { \n          img: `/images/${emoji.hexcode}.svg`, \n          onClick: () => clickEmoji(emoji), fill: \"red\"\n        }\n      })}\n    />\n  );\n}\n//img: logo, //replace with specific emoji images\n // onClick: () => console.log('clicked!'), //Make a proper function, pass the value to it\n  //fill: '#7cebff', //get this right\n // shadow: '#64c5d6' //this too\n\nconst clickEmoji = (me, emoji) => {\n  console.log(emoji.hexcode + ' was clicked.');\n}\n\nconst getHexProps = (hexagon) => {\n  var num = hexagon;\n  const emoji = openmoji.openmojis[hexagon];\n  var emojiimg = \"/images/\" + String(emoji.hexcode) + \".svg\";\n\n  return {\n    style: {\n      fill: \"white\",\n      backgroundImage: {emojiimg},\n      stroke: '#282c34' //'#007aff'\n    }\n  };\n}\n\nfunction App() {\n  return (    \n    <div className=\"App\">\n      <header className=\"App-header\">\n        {getTiles()}\n      </header>\n    </div>\n  );\n    //\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}